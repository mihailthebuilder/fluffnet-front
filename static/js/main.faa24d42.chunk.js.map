{"version":3,"sources":["components/Header/index.tsx","components/Upload/index.tsx","components/Response/index.tsx","components/Faq/index.tsx","resources/fire.ts","components/Feedback/index.tsx","App.tsx","index.tsx"],"names":["Header","href","className","Upload","image","setImage","setMessage","setPrediction","useState","isLoading","setIsLoading","id","onSubmit","event","preventDefault","fd","FormData","append","raw","requestUrl","window","location","hostname","axios","post","then","res","status","Error","data","fluffy","prob","isFluffy","probShown","Math","round","conclusion","confidence","catch","error","console","message","onChange","files","target","length","rawFile","type","includes","size","preview","URL","createObjectURL","required","disabled","alt","src","Response","Faq","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","saveFeedback","fileObj","prediction","correct","storage","getStorage","fileName","name","extension","substring","lastIndexOf","result","characters","charactersLength","i","charAt","floor","random","randomName","storageRef","ref","uploadBytes","addDoc","collection","timestamp","Date","docRef","log","Feedback","rawImage","submitted","setSubmitted","sendFeedback","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faa24d42.chunk.js","sourcesContent":["import \"./index.scss\";\n\nconst Header = () => (\n  <header>\n    <nav>\n      <a href=\"#faq\">FAQ</a>\n    </nav>\n    <h1>\n      <span className=\"title-emoji\">‚òÅÔ∏è</span> FluffNet{\" \"}\n      <span className=\"title-emoji\">‚òÅÔ∏è</span>\n    </h1>\n  </header>\n);\n\nexport default Header;\n","import { useState, ChangeEvent, FormEvent } from \"react\";\nimport axios from \"axios\";\nimport \"./index.scss\";\n\ntype Props = {\n  image: ImageState;\n  setImage: StateSetter<ImageState>;\n  setMessage: StateSetter<string>;\n  setPrediction: StateSetter<PredictionState>;\n};\n\nconst Upload = ({ image, setImage, setMessage, setPrediction }: Props) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const uploadImage = (event: ChangeEvent<HTMLInputElement>) => {\n    setImage(null);\n    setPrediction(null);\n    setMessage(\"please give me an image üñºÔ∏è\");\n\n    const files = event.target?.files;\n\n    // check needs to be made when upload, then upload and cancel\n    if (!files || files.length === 0) return;\n\n    const rawFile = files[0];\n\n    if (!rawFile.type.includes(\"image\")) return;\n\n    if (rawFile.size / 1024 / 1024 >= 10) {\n      setMessage(\"upload an image of less than 10 MB\");\n      return;\n    }\n\n    setImage({\n      preview: URL.createObjectURL(rawFile),\n      raw: rawFile,\n    });\n    setMessage(\"quick, send it to me üì®\");\n  };\n\n  const predictImage = (event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setMessage(\"analysing the image, might take up to 2 minutes ‚è≥\");\n\n    let fd = new FormData();\n    fd.append(\"image\", (image as Image).raw);\n\n    const requestUrl =\n      window.location.hostname === \"localhost\"\n        ? \"http://localhost:5000/\"\n        : \"https://fluffnet-api.herokuapp.com\";\n\n    axios\n      .post<Prediction>(requestUrl, fd)\n      .then((res) => {\n        if (res.status !== 200) {\n          throw new Error(\"Response status !== 200\");\n        }\n\n        const { fluffy, prob } = res.data;\n\n        const isFluffy = fluffy === \"True\";\n\n        let probShown = Math.round(prob * 100);\n        if (!isFluffy) probShown = 100 - probShown;\n\n        const conclusion = isFluffy ? \"it's fluffy üß∏\" : \"it's not fluffy üî®\";\n        const confidence = ` (with ${probShown}% confidence)`;\n\n        setPrediction({ fluffy, prob });\n        setMessage(conclusion + confidence);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setMessage(\"something went wrong üòµ try again please!\");\n        console.error(error.message);\n        console.error(error.res);\n      });\n  };\n\n  return (\n    <section id=\"hero\">\n      <div className=\"hero-left\">\n        <p>\n          Upload an image and our ü§ñ will tell you if it has something fluffy in\n          it üß∏.\n        </p>\n        <form onSubmit={predictImage}>\n          <label>\n            <span className=\"button upload-button\">Upload image</span>\n            <input onChange={uploadImage} type=\"file\" required></input>\n          </label>\n\n          <button\n            className={!image || isLoading ? \"button\" : \"button submit-enabled\"}\n            type=\"submit\"\n            disabled={!image || isLoading}\n          >\n            {isLoading ? \"Loading...\" : \"Submit\"}\n          </button>\n        </form>\n      </div>\n      <div className=\"hero-right\">\n        {image ? (\n          <img alt=\"\" src={image.preview} />\n        ) : (\n          <div className=\"image-placeholder\">Image will be shown here </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Upload;\n","import \"./index.scss\";\n\nconst Response = ({ message }: { message: string }) => (\n  <section id=\"results\">\n    <h2>\n      ü§ñ says...\n      <span className=\"robot-message\">{message}</span>\n    </h2>\n  </section>\n);\n\nexport default Response;\n","import \"./index.scss\";\n\nconst Faq = () => (\n  <section id=\"faq\">\n    <h2>FAQ</h2>\n    <div className=\"question\">\n      <h3>How does this work?</h3>\n      <p>\n        Check out the source code{\" \"}\n        <a href=\"https://github.com/mihailthebuilder/fluffnet\">here</a>.\n      </p>\n    </div>\n    <div className=\"question\">\n      <h3>Do you store the images I upload?</h3>\n      <p>\n        Only if you click the <b>Correct</b>/<b>Incorrect</b> buttons. In that\n        case, we'll use your feedback to make the model more accurate.\n      </p>\n    </div>\n    <div className=\"question\">\n      <h3>\n        How can I let you know about an issue/error with the website/model?\n      </h3>\n      <p>\n        If you're a dev, you can raise a ticket on the{\" \"}\n        <a href=\"https://github.com/mihailthebuilder/fluffnet\">GitHub repo</a>.\n        If not, you can send me a message on{\" \"}\n        <a href=\"https://www.linkedin.com/in/mihailmarian/\">LinkedIn</a>.\n      </p>\n    </div>\n    <div className=\"question\">\n      <h3>Can I contact you about anything else?</h3>\n      <p>\n        Sure! I'm always open to talking to people about deep learning. Just\n        send me a message on{\" \"}\n        <a href=\"https://www.linkedin.com/in/mihailmarian/\">LinkedIn</a>.\n      </p>\n    </div>\n  </section>\n);\n\nexport default Faq;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\n\nimport { getStorage, ref, uploadBytes } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDCqHep8arVct7xlRCZpOY5T8dU44FpygM\",\n  authDomain: \"fluffnet-ai.firebaseapp.com\",\n  projectId: \"fluffnet-ai\",\n  storageBucket: \"fluffnet-ai.appspot.com\",\n  messagingSenderId: \"443265600217\",\n  appId: \"1:443265600217:web:a0522ad0c63fcd5c8accc8\",\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\n\n// generates new name for the image\nconst randomName = (length: number) => {\n  let result = \"\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  let charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nconst saveFeedback = (\n  fileObj: File,\n  prediction: Prediction,\n  correct: boolean\n) => {\n  const storage = getStorage();\n\n  let fileName = fileObj.name;\n  const extension = fileName.substring(fileName.lastIndexOf(\".\"));\n  fileName = randomName(20) + extension;\n\n  const storageRef = ref(storage, fileName);\n  uploadBytes(storageRef, fileObj).then(() => {\n    addDoc(collection(db, \"feedback\"), {\n      fileName,\n      prediction,\n      correct,\n      timestamp: new Date(),\n    })\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  });\n};\n\nexport { saveFeedback };\n","import { useState } from \"react\";\nimport \"./index.scss\";\nimport { saveFeedback } from \"../../resources/fire\";\n\nconst Feedback = ({\n  prediction,\n  rawImage,\n}: {\n  prediction: Prediction;\n  rawImage: File;\n}) => {\n  const [submitted, setSubmitted] = useState(false);\n\n  const sendFeedback = (correct: boolean) => {\n    setSubmitted(true);\n    saveFeedback(rawImage, prediction, correct);\n  };\n\n  return (\n    <section id=\"feedback\">\n      {submitted ? (\n        <p className=\"feedback-sent\">Thank you for the feedback üôè</p>\n      ) : (\n        <>\n          <div className=\"buttons-container\">\n            <button\n              type=\"button\"\n              className=\"button left\"\n              onClick={() => sendFeedback(true)}\n            >\n              Correct\n            </button>\n            <button\n              type=\"button\"\n              className=\"button right\"\n              onClick={() => sendFeedback(false)}\n            >\n              Incorrect\n            </button>\n          </div>\n          <p className=\"note\">\n            We will store the photo and the ü§ñ's results if you answer this. See\n            the <a href=\"#faq\">FAQs</a> for more.\n          </p>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Feedback;\n","import { useState } from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport Upload from \"./components/Upload\";\nimport Response from \"./components/Response\";\nimport Faq from \"./components/Faq\";\nimport Feedback from \"./components/Feedback\";\nimport \"./resources/fire\";\n\nfunction App() {\n  const [image, setImage] = useState<ImageState>(null);\n  const [message, setMessage] = useState(\"gimme an image puh-leeeaase ü•∫\");\n  const [prediction, setPrediction] = useState<PredictionState>(null);\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Upload\n        image={image}\n        setImage={setImage}\n        setMessage={setMessage}\n        setPrediction={setPrediction}\n      />\n\n      <Response message={message} />\n\n      {prediction && image && (\n        <Feedback prediction={prediction} rawImage={image.raw} />\n      )}\n\n      <Faq />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"./resources/fire\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}